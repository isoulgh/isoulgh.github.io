(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{508:function(t,s,e){t.exports=e.p+"assets/img/2001120_clip_image002.dfa6def0.jpg"},509:function(t,s,e){t.exports=e.p+"assets/img/2001120_clip_image004.d8990ccb.jpg"},510:function(t,s,e){t.exports=e.p+"assets/img/2001120_clip_image006.36114ea1.jpg"},511:function(t,s,e){t.exports=e.p+"assets/img/2001120_image-20200112115850881.a12feb06.png"},522:function(t,s,e){"use strict";e.r(s);var i=e(4),p=Object(i.a)({},(function(){var t=this,s=t.$createElement,i=t._self._c||s;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("p",[t._v("Java.io")]),t._v(" "),i("p",[t._v("架构师关注技术，程序猿只注重功能")]),t._v(" "),i("p",[t._v("以程序为中心，辨别输入输出流")]),t._v(" "),i("p",[i("img",{attrs:{src:e(508),alt:"img"}})]),t._v(" "),i("p",[t._v("节点流和处理流（对其他流进行封装，简化操作和提高性能）")]),t._v(" "),i("p",[i("img",{attrs:{src:e(509),alt:"img"}})]),t._v(" "),i("p",[i("img",{attrs:{src:e(510),alt:"img"}})]),t._v(" "),i("p",[t._v("File类")]),t._v(" "),i("p",[t._v("1."),i("u",[t._v("继承体系")]),t._v("。2.类的简短说明（先看第一句话）。3.常量。4."),i("u",[t._v("构造器（方法）")]),t._v("，没有构造方法的例子，Math类，RunTime类。5."),i("u",[t._v("方法")]),t._v("，对象调，还是类调")]),t._v(" "),i("p",[t._v("File.API")]),t._v(" "),i("p",[i("img",{attrs:{src:e(511),alt:"image-20200112115850881"}})])])}),[],!1,null,null,null);s.default=p.exports}}]);